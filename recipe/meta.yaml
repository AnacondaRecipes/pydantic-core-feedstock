{% set version = "2.16.0" %}

package:
  name: pydantic-core
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/p/pydantic-core/pydantic_core-{{ version }}.tar.gz
  sha256: 474102848feb72fc94c5f16e53e963fa6ac99855eccf3f319eef669388a1ee3c

build:
  script_env:   # [linux]
    - FEEDSTOCK_ROOT   # [linux]
  script:
    # PyPy has weird sysconfigdata name
    - rm -f $PREFIX/lib/pypy$PY_VER/_sysconfigdata.py  # [build_platform != target_platform and target_platform == "linux-ppc64le"]
    # maturin looks at the gitignore file, but it is quite aggressive for conda-forge
    - mv ${FEEDSTOCK_ROOT}/.gitignore ${FEEDSTOCK_ROOT}/gitignore     # [linux]
    - {{ PYTHON }} -m pip install . -vv
    - mv ${FEEDSTOCK_ROOT}/gitignore ${FEEDSTOCK_ROOT}/.gitignore     # [linux]
  number: 0

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - maturin >=1,<2                         # [build_platform != target_platform]
    - {{ compiler("c") }}
    - {{ compiler("rust") }}
  host:
    - pip
    - python
    - maturin >=1,<2
    - typing-extensions  >=4.6.0,!=4.7.0
  run:
    - python
    - typing-extensions >=4.6.0,!=4.7.0

test:
  imports:
    - pydantic_core
  commands:
    - pip check
    - python -c "from pydantic_core import PydanticUndefinedType"
  requires:
    - pip

about:
  home: https://github.com/pydantic/pydantic-core
  dev_url: https://github.com/pydantic/pydantic-core
  summary: Core validation logic for pydantic written in rust
  license: MIT
  license_file: LICENSE

extra:
  recipe-maintainers:
    - xhochy
    - samuelcolvin
    - adriangb
    - dmontagu
    - pavelzw
